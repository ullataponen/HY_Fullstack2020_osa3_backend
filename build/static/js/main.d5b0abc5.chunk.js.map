{"version":3,"sources":["components/Person.js","services/persons.js","components/Personlist.js","components/Addperson.js","components/Notification.js","App.js","index.js"],"names":["Person","props","person","name","number","onClick","id","deletePerson","baseUrl","getAll","axios","get","then","response","data","create","newEntry","post","update","put","del","delete","Personlist","persons","keyword","setPersons","setMessage","find","p","window","confirm","personService","returnedPersons","catch","error","setTimeout","map","key","filter","toUpperCase","includes","Addperson","savePerson","useState","setNewEntry","handleInputChange","event","target","value","onSubmit","preventDefault","personToUpdate","console","log","returnedPerson","errorMsg","addPerson","onChange","type","Notification","message","className","App","setKeyword","useEffect","initialPersons","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d5b0abc5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Person = props => {\r\n\tconst delPerson = id => {\r\n\t\tprops.deletePerson(id);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t{props.person.name} {props.person.number}{\" \"}\r\n\t\t\t<button onClick={() => delPerson(props.person.id)}>delete</button>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default Person;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n\tconst request = axios.get(baseUrl);\r\n\t// const nonExisting = {\r\n\t// \tid: 10000,\r\n\t// \tname: \"This name is not saved to server\",\r\n\t// \tnumber: 666\r\n\t// };\r\n\t// return request.then(response => response.data.concat(nonExisting));\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst create = (newEntry) => {\r\n\tconst request = axios.post(baseUrl, newEntry);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst update = (id, newEntry) => {\r\n\tconst request = axios.put(`${baseUrl}/${id}`, newEntry);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nconst del = (id) => {\r\n\tconst request = axios.delete(`${baseUrl}/${id}`);\r\n\treturn request.then((response) => response.data);\r\n};\r\n\r\nexport default {\r\n\tgetAll,\r\n\tcreate,\r\n\tupdate,\r\n\tdel,\r\n};\r\n","import React from \"react\";\r\nimport Person from \"./Person\";\r\nimport personService from \"./../services/persons\";\r\n\r\nconst Personlist = ({ persons, keyword, setPersons, setMessage }) => {\r\n\tconst deletePerson = id => {\r\n\t\tconst person = persons.find(p => p.id === id);\r\n\t\tif (window.confirm(`Are you sure to delete ${person.name}?`)) {\r\n\t\t\tpersonService\r\n\t\t\t\t.del(id)\r\n\t\t\t\t.then(response => {\r\n\t\t\t\t\tpersonService.getAll().then(returnedPersons => {\r\n\t\t\t\t\t\tsetPersons(returnedPersons);\r\n\t\t\t\t\t\tsetMessage(`Person '${person.name}' was successfully deleted.`);\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => {\r\n\t\t\t\t\tsetMessage(\r\n\t\t\t\t\t\t`Error. Person '${person.name}' was already removed from server`\r\n\t\t\t\t\t);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetMessage(\"\");\r\n\t\t}, 5000);\r\n\t};\r\n\r\n\tif (keyword === \"\") {\r\n\t\treturn persons.map(person => (\r\n\t\t\t<Person person={person} key={person.id} deletePerson={deletePerson} />\r\n\t\t));\r\n\t} else {\r\n\t\tlet filterValue = persons.filter(person =>\r\n\t\t\tperson.name.toUpperCase().includes(keyword.toUpperCase())\r\n\t\t);\r\n\t\treturn filterValue.map(person => (\r\n\t\t\t<Person person={person} key={person.id} deletePerson={deletePerson} />\r\n\t\t));\r\n\t}\r\n};\r\n\r\nexport default Personlist;\r\n","import React, { useState } from \"react\";\r\nimport personService from \"./../services/persons\";\r\n\r\nexport default function Addperson({\r\n\tpersons,\r\n\tsavePerson,\r\n\tsetPersons,\r\n\tsetMessage,\r\n}) {\r\n\tconst [newEntry, setNewEntry] = useState({ name: \"\", number: \"\" });\r\n\r\n\tconst addPerson = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst personToUpdate = persons.find((p) => p.name === newEntry.name);\r\n\t\tconsole.log(personToUpdate);\r\n\t\tif (persons.find((p) => p.name === newEntry.name)) {\r\n\t\t\tconst id = personToUpdate.id;\r\n\t\t\tif (\r\n\t\t\t\twindow.confirm(\r\n\t\t\t\t\t`${newEntry.name} is already added to phonebook, replace the old number with new one?`\r\n\t\t\t\t)\r\n\t\t\t) {\r\n\t\t\t\tpersonService\r\n\t\t\t\t\t.update(id, newEntry)\r\n\t\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\t\tsetMessage(\r\n\t\t\t\t\t\t\t`Person '${personToUpdate.name}' was successfully updated.`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tsetPersons(\r\n\t\t\t\t\t\t\tpersons.map((person) =>\r\n\t\t\t\t\t\t\t\tperson.id !== id ? person : returnedPerson\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tsetMessage(\r\n\t\t\t\t\t\t\t`Error. Person '${personToUpdate.name}' was already removed from server`\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t});\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tsetMessage(\"\");\r\n\t\t\t\t}, 5000);\r\n\t\t\t\tsetPersons(persons.filter((p) => p.id !== id));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tpersonService\r\n\t\t\t\t.create(newEntry)\r\n\t\t\t\t.then((returnedPerson) => {\r\n\t\t\t\t\tsavePerson(returnedPerson);\r\n\t\t\t\t\tsetMessage(`Person '${newEntry.name}' was successfully added.`);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetMessage(\"\");\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((error) => {\r\n\t\t\t\t\tlet errorMsg = error.response.data.error;\r\n\t\t\t\t\tsetMessage(`Error: ${errorMsg}`);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tsetMessage(\"\");\r\n\t\t\t\t\t}, 5000);\r\n\t\t\t\t});\r\n\t\t}\r\n\t\tsetNewEntry({ name: \"\", number: \"\" });\r\n\t};\r\n\r\n\tconst handleInputChange = (event) => {\r\n\t\tsetNewEntry({ ...newEntry, [event.target.name]: event.target.value });\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<h2>Add new entry</h2>\r\n\t\t\t<form onSubmit={(event) => addPerson(event)}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tname:{\" \"}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\tvalue={newEntry.name}\r\n\t\t\t\t\t\tonChange={(event) => handleInputChange(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\tnumber:{\" \"}\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"number\"\r\n\t\t\t\t\t\tvalue={newEntry.number}\r\n\t\t\t\t\t\tonChange={(event) => handleInputChange(event)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button type=\"submit\">add</button>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n\tif (message.includes(\"Error\")) {\r\n\t\treturn <div className=\"error\">{message}</div>;\r\n\t} else if (message.includes(\"successfully\")) {\r\n\t\treturn <div className=\"success\">{message}</div>;\r\n\t} else {\r\n\t\treturn null;\r\n\t}\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useState, useEffect } from \"react\";\nimport Personlist from \"./components/Personlist\";\nimport Addperson from \"./components/Addperson\";\nimport personService from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n\tconst [persons, setPersons] = useState([]);\n\tconst [keyword, setKeyword] = useState(\"\");\n\tconst [message, setMessage] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tpersonService.getAll().then(initialPersons => {\n\t\t\tsetPersons(initialPersons);\n\t\t});\n\t}, []);\n\n\tconst inputChanged = event => {\n\t\tsetKeyword(event.target.value);\n\t};\n\n\tconst savePerson = newEntry => {\n\t\tsetPersons(persons.concat(newEntry));\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Phonebook</h1>\n\t\t\t<Notification message={message} />\n\t\t\tFilter contacts with: <input value={keyword} onChange={inputChanged} />\n\t\t\t<Addperson\n\t\t\t\tpersons={persons}\n\t\t\t\tsavePerson={savePerson}\n\t\t\t\tsetPersons={setPersons}\n\t\t\t\tsetMessage={setMessage}\n\t\t\t/>\n\t\t\t<h2>Numbers</h2>\n\t\t\t<Personlist\n\t\t\t\tpersons={persons}\n\t\t\t\tkeyword={keyword}\n\t\t\t\tsetPersons={setPersons}\n\t\t\t\tsetMessage={setMessage}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}